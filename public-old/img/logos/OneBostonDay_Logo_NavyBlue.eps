%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.5 (Build 13F1066) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 143 82
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 143 82
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.030999999 0.012 0.37599999 sc
q
42.066002 32.108002 m
39.345001 32.108002 37.625 33.484001 36.466999 35.016998 c
36.466999 32.452 l
32.681999 32.452 l
32.681999 55.286999 l
36.466999 55.286999 l
36.466999 46.215 l
37.687 47.936001 39.407001 49.313 42.066002 49.313 c
45.976002 49.313 49.761002 46.215 49.761002 40.709999 c
49.761002 35.205002 46.007 32.108002 42.066002 32.108002 c
42.066002 32.108002 l
h
41.189999 46.028 m
38.625999 46.028 36.373001 43.931999 36.373001 40.709999 c
36.373001 37.487999 38.625999 35.393002 41.189999 35.393002 c
43.786999 35.393002 45.914001 37.425999 45.914001 40.709999 c
45.914001 43.963001 43.755001 46.028 41.189999 46.028 c
41.189999 46.028 l
h
41.189999 46.028 m
W*
0 0 143 82 rc
27.681999 60.286999 m
54.761002 60.286999 l
54.761002 27.108 l
27.681999 27.108 l
h
f
Q
q
62.018002 32.051998 m
56.645 32.051998 52.674 36.155998 52.674 41.195 c
52.674 46.268002 56.678001 50.438999 62.084999 50.438999 c
67.490997 50.438999 71.461998 46.334999 71.461998 41.262001 c
71.461998 36.223 67.457001 32.051998 62.018002 32.051998 c
62.018002 32.051998 l
h
62.018002 46.902 m
58.780998 46.902 56.712002 44.366001 56.712002 41.262001 c
56.712002 38.125 58.948002 35.556 62.084999 35.556 c
65.355003 35.556 67.424004 38.091999 67.424004 41.195 c
67.424004 44.332001 65.188004 46.902 62.018002 46.902 c
62.018002 46.902 l
h
62.018002 46.902 m
W*
0 0 143 82 rc
47.674 55.438999 m
76.461998 55.438999 l
76.461998 27.052 l
47.674 27.052 l
h
f
Q
q
81.438004 32.118999 m
78.935997 32.118999 76.166 33.02 73.962997 34.755001 c
75.764999 37.491001 l
77.667 36.056 79.736 35.321999 81.538002 35.321999 c
83.273003 35.321999 84.275002 36.056 84.275002 37.223999 c
84.275002 37.291 l
84.275002 38.659 82.405998 39.125999 80.336998 39.759998 c
77.734001 40.494999 74.831001 41.562 74.831001 44.932999 c
74.831001 45 l
74.831001 48.337002 77.600998 50.373001 81.105003 50.373001 c
83.306999 50.373001 85.709999 49.605 87.579002 48.369999 c
85.976997 45.5 l
84.275002 46.535 82.473 47.168999 81.003998 47.168999 c
79.435997 47.168999 78.535004 46.435001 78.535004 45.400002 c
78.535004 45.334 l
78.535004 44.066002 80.436996 43.530998 82.505997 42.863998 c
85.075996 42.063 87.978996 40.895 87.978996 37.724998 c
87.978996 37.658001 l
87.978996 33.953999 85.109001 32.118999 81.438004 32.118999 c
W*
0 0 143 82 rc
68.962997 55.373001 m
92.978996 55.373001 l
92.978996 27.118999 l
68.962997 27.118999 l
h
f
Q
q
96.453003 37.958 m
96.453003 36.389999 97.253998 35.756001 98.623001 35.756001 c
99.523003 35.756001 100.324 35.956001 101.125 36.356998 c
101.125 33.053001 l
100.124 32.485001 98.988998 32.152 97.487999 32.152 c
94.517998 32.152 92.416 33.452999 92.416 37.324001 c
92.416 46.602001 l
90.18 46.602001 l
90.18 50.071999 l
92.416 50.071999 l
92.416 54.910999 l
96.453003 54.910999 l
96.453003 50.071999 l
101.192 50.071999 l
101.192 46.602001 l
96.453003 46.602001 l
96.453003 37.958 l
W*
0 0 143 82 rc
85.18 59.910999 m
106.192 59.910999 l
106.192 27.152 l
85.18 27.152 l
h
f
Q
q
112.974 32.051998 m
107.602 32.051998 103.63 36.155998 103.63 41.195 c
103.63 46.268002 107.635 50.438999 113.041 50.438999 c
118.447 50.438999 122.419 46.334999 122.419 41.262001 c
122.419 36.223 118.414 32.051998 112.974 32.051998 c
112.974 32.051998 l
h
112.974 46.902 m
109.737 46.902 107.669 44.366001 107.669 41.262001 c
107.669 38.125 109.904 35.556 113.041 35.556 c
116.312 35.556 118.38 38.091999 118.38 41.195 c
118.38 44.332001 116.145 46.902 112.974 46.902 c
112.974 46.902 l
h
112.974 46.902 m
W*
0 0 143 82 rc
98.629997 55.438999 m
127.419 55.438999 l
127.419 27.052 l
98.629997 27.052 l
h
f
Q
q
130.392 32.452 m
126.354 32.452 l
126.354 50.071999 l
130.392 50.071999 l
130.392 47.334999 l
131.526 49.004002 133.162 50.438999 135.89799 50.438999 c
139.869 50.438999 142.172 47.77 142.172 43.665001 c
142.172 32.452 l
138.134 32.452 l
138.134 42.463001 l
138.134 45.200001 136.76601 46.768002 134.36301 46.768002 c
132.02699 46.768002 130.392 45.132999 130.392 42.396999 c
130.392 32.452 l
W*
0 0 143 82 rc
121.354 55.438999 m
147.172 55.438999 l
147.172 27.452 l
121.354 27.452 l
h
f
Q
q
32.674999 5.5149999 m
32.674999 8.2670002 l
31.455 6.5469999 29.733999 5.171 27.044001 5.171 c
23.166 5.171 19.379999 8.2670002 19.379999 13.773 c
19.379999 19.278 23.101999 22.375 27.044001 22.375 c
29.766001 22.375 31.486 20.999001 32.674999 19.466 c
32.674999 28.35 l
36.459999 28.35 l
36.459999 5.5149999 l
32.674999 5.5149999 l
32.674999 5.5149999 l
h
27.951 19.09 m
25.355 19.09 23.197001 17.087999 23.197001 13.773 c
23.197001 10.52 25.386 8.4549999 27.951 8.4549999 c
30.485001 8.4549999 32.737 10.551 32.737 13.773 c
32.737 16.995001 30.485001 19.09 27.951 19.09 c
27.951 19.09 l
h
27.951 19.09 m
W*
0 0 143 82 rc
14.38 33.349998 m
41.459999 33.349998 l
41.459999 0.171 l
14.38 0.171 l
h
f
Q
q
51.129002 5.5149999 m
51.129002 7.5479999 l
50.002998 6.2030001 48.283001 5.171 45.779999 5.171 c
42.652 5.171 39.898998 6.954 39.898998 10.269 c
39.898998 10.332 l
39.898998 13.898 42.745998 15.65 46.594002 15.65 c
48.596001 15.65 49.877998 15.368 51.160999 14.962 c
51.160999 15.368 l
51.160999 17.650999 49.722 18.903 47.094002 18.903 c
45.249001 18.903 43.872002 18.496 42.370998 17.871 c
41.338001 20.905001 l
43.153 21.718 44.936001 22.281 47.625999 22.281 c
52.506001 22.281 54.882999 19.716 54.882999 15.306 c
54.882999 5.5149999 l
51.129002 5.5149999 l
51.129002 5.5149999 l
h
51.223 12.521 m
50.252998 12.897 48.908001 13.178 47.438999 13.178 c
45.061001 13.178 43.653 12.208 43.653 10.52 c
43.653 10.457 l
43.653 8.8929996 45.061001 8.0170002 46.844002 8.0170002 c
49.346001 8.0170002 51.223 9.4250002 51.223 11.489 c
51.223 12.521 l
51.223 12.521 l
h
51.223 12.521 m
W*
0 0 143 82 rc
34.898998 27.281 m
59.882999 27.281 l
59.882999 0.171 l
34.898998 0.171 l
h
f
Q
q
67.425003 5.046 m
66.111 1.6670001 64.640999 0.41600001 61.981998 0.41600001 c
60.387001 0.41600001 59.23 0.792 58.071999 1.4170001 c
59.355 4.2319999 l
60.042999 3.8570001 60.793999 3.6070001 61.576 3.6070001 c
62.639 3.6070001 63.296001 4.0760002 63.921001 5.5149999 c
57.040001 22.031 l
61.075001 22.031 l
65.766998 9.7690001 l
70.053001 22.031 l
73.994003 22.031 l
67.425003 5.046 l
W*
0 0 143 82 rc
52.040001 27.031 m
78.994003 27.031 l
78.994003 -4.5840001 l
52.040001 -4.5840001 l
h
f
Q
q
36.306 81.288002 m
36.306 59.393002 l
32.678001 59.393002 l
32.678001 77.660004 l
29.863001 77.660004 l
29.863001 81.288002 l
36.306 81.288002 l
W*
0 0 143 82 rc
24.863001 86.288002 m
41.306 86.288002 l
41.306 54.393002 l
24.863001 54.393002 l
h
f
Q
0.18799999 0.65899998 0.97600001 sc
q
16.171 81.228996 m
16.171 67.389999 l
19.267 67.389999 l
19.267 64.263 l
16.171 64.263 l
16.171 59.402 l
12.518 59.402 l
12.518 64.263 l
1.589 64.263 l
0.87699997 66.987999 l
12.92 81.228996 l
16.171 81.228996 l
16.171 81.228996 l
h
12.518 75.966003 m
5.3969998 67.389999 l
12.518 67.389999 l
12.518 75.966003 l
12.518 75.966003 l
h
12.518 75.966003 m
W*
0 0 143 82 rc
-4.1230001 86.228996 m
24.267 86.228996 l
24.267 54.402 l
-4.1230001 54.402 l
h
f
Q
q
42.722 81.264 m
55.662998 81.264 l
55.662998 77.889 l
46.002998 77.889 l
45.662998 72.811996 l
46.685001 73.182999 47.645 73.431 49.099998 73.431 c
53.341 73.431 56.623001 71.202003 56.623001 66.588997 c
56.623001 62.130001 53.403 59.220001 48.605 59.220001 c
45.292 59.220001 42.691002 60.551998 40.647999 62.533001 c
43.000999 65.289001 l
44.734001 63.679001 46.561001 62.688 48.573002 62.688 c
51.174 62.688 52.876999 64.174004 52.876999 66.464996 c
52.876999 68.694 51.081001 70.086998 48.388 70.086998 c
46.839001 70.086998 45.507999 69.653999 44.394001 69.127998 c
42.103001 70.644997 l
42.722 81.264 l
W*
0 0 143 82 rc
35.647999 86.264 m
61.623001 86.264 l
61.623001 54.220001 l
35.647999 54.220001 l
h
f
Q
q
22.731001 61.636002 m
22.731001 62.277 22.944 62.812 23.372 63.238998 c
23.799 63.666 24.333 63.880001 24.974001 63.880001 c
25.615 63.880001 26.149 63.666 26.577 63.238998 c
27.004 62.812 27.218 62.277 27.218 61.636002 c
27.218 60.994999 27.004 60.460999 26.577 60.034 c
26.149 59.605999 25.615 59.393002 24.974001 59.393002 c
24.333 59.393002 23.799 59.605999 23.372 60.034 c
22.944 60.460999 22.731001 60.994999 22.731001 61.636002 c
W*
0 0 143 82 rc
17.731001 68.879997 m
32.217999 68.879997 l
32.217999 54.393002 l
17.731001 54.393002 l
h
f
ep
end
%%Trailer
%%EOF
